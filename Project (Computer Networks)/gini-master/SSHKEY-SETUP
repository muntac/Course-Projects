Please follow the instructions of the case that best suits you.

1) The front-end and back-end are running on the same machine:
    -change directory to $HOME/.ssh
    -enter "ssh-keygen -t dsa" into the command line
    -press ENTER for all options
    -enter "cat id_dsa.pub >> authorized_keys" into the command line
    
2) The front-end and back-end are running on two different Linux machines:
    -change directory to $HOME/.ssh on the front-end
    -enter "ssh-keygen -t dsa" into the command line
    -enter "scp id_dsa.pub user@host1:.ssh/host2.pub" into the command line, where host1 is your back-end, host2 is your front-end and user is your username
    -change directory to $HOME/.ssh on the back-end
    -enter "cat host2.pub >> authorized_keys" into the command line
    
3) The front-end is running on Windows:
    -change directory to $HOME/.ssh on the back-end
    -enter "ssh-keygen -t dsa" into the command line
    -enter "cat id_dsa.pub >> authorized_keys" into the command line
    -copy the file $HOME/.ssh/id_dsa to the front-end
    -download puttygen (http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html)
    -load the file id_dsa into puttygen
    -choose 'Save private key' in puttygen
    -open putty
    -expand the 'SSH' category on the left
    -select 'Auth' and provide the .ppk file you saved earlier
    -scroll back up and select the 'Session' category on the left
    
    If you only use putty with this program:
        -select 'Default Settings' under 'Saved Sessions'
        -press the 'Save' button
        
        Details: What you just did was specify a key that putty will attempt to use by default anytime you use putty for SSH.  This is useful in gBuilder if you frequently change the server location to machines that will authenticate you the same way, such as machines within a school computer lab.
        
    Otherwise, you should use Sessions:
        -specify the Host Name you want to associate with this session
        -specify a meaningful Session Name
        -press the 'Save' button
        
        Details: What you just did was create a putty session identified by the name you provided.  This session holds the Host Name you will connect to, as well as the key used to authenticate you.  The session name can then be provided in gBuilder, who will use it to connect to the back-end.  Note that when providing a session name in gBuilder, the server name will be ignored.
        
